#
# define display information
#
name: MaSuRCA Assembler, Version 3.2.3 
tooltip: |
      MaSuRCA consists of three main steps:
      1. create the config.txt file
      2. run `masurca config.txt` to generate the assemble.sh script
      3. run assembler.sh to assemble the data
      
screenshots: []

icon: null

#
# define a set of similar methods that might be useful to the user
#
suggestions:
    apps:
        related:
            []
        next:
            []
    methods:
        related:
            []
        next:
            [annotate_contigset]

#
# Configure the display and description of parameters
#
parameters :
    read_libraries :
        ui-name : Reads Libraries
        short-hint : Reads libraries (only KBase PairedEnd Libs are input through this parameter)
    jump_libraries :
        ui-name : Jump Reads
        short-hint : Reads libraries (only KBase PairedEnd Libs are input through this parameter)
    pacbio_read :
        ui-name : PacBio Reads
        short-hint : Reads libraries (only KBase PairedEnd Libs are input through this parameter)
    other_frg :
        ui-name : Other FRG
        short-hint : must be converted to CABOG format FRG files         
    jf_size :
        ui-name : jellyfish_size 
        short-hint : |
            An integer for the mandatory jellyfish hash size
    output_contigset_name :
        ui-name : |
            Output ContigSet
        short-hint : |
            The name for the resulting ContigSet will be saved in KBase
    graph_kmer_size :
        ui-name : |
            graph_kmer_size
        short-hint : |
            The kmer size to be used for super reads; k-mer size for deBruijn graph values between 25 and 101 are supported
    use_linking_mates :
        ui-name : |
            use_linking_mates
        short-hint : |
            Those that do not end up in the same super read are called 'linking mates' 
        long-hint : |
           The best assembly results are achieved by setting this parameter to 1 for Illumina-only assemblies to use the 'linking mates'. 
    limit_jump_coverage :
        ui-name : |
            limit_jump_coverage
        short-hint : |
             setting this parameter to have assembler down-sample the jumping library to 60x (from above) coverage
    cgwErrorRate :
        ui-name : |
            cgwErrorRate
        short-hint : |
            these are the additional parameters to Celera Assembler
        long-hint : |            
            set cgwErrorRate=0.25 for bacteria, i.e., CA_PARAMETERS = cgwErrorRate=0.25
    kmer_count_threshold :
        ui-name : |
            kmer_count_threshold
        short-hint : |
            minimum count k-mers used in error correction 1 means all k-mers are used. one can increase to 2 if coverage >100
        long-hint : |
            <p>MaSuRCA works best with coverage up to 150x. To use 200x+ coverage data you need to set KMER_COUNT_THRESHOLD parameter in the config file to 2 or 3, or simply use part of the data.</p>
    close_gaps :
        ui-name : |
            close_gaps
        short-hint : |
            whether to attempt to close gaps in scaffolds with Illumina data (1) or not (0)
    soap_assembly :
        ui-name : |
            soap_assembly
        short-hint : |
            <p>set this to 1 to use SOAPdenovo contigging/scaffolding module.  Assembly will be worse but will run faster. Useful for very large (>5Gbp) genomes</p>
    do_homopolymer_trim :
        ui-name : |
            do_homopolymer_trim
        short-hint : | 
            <p>specifies if we do (1) or do not (0) want to trim long runs of homopolymers (e.g. GGGGGGGG) from 3' read ends, use it for high GC genomes
DO_HOMOPOLYMER_TRIM=0</p>

description : |
    <p>This is a KBase wrapper for MaSuRCA.</p>
    <p>The MaSuRCA (Maryland Super Read Cabog Assembler) assembler combines the benefits of deBruijn graph and Overlap-Layout-Consensus assembly approaches. Since version 3.2.1 it supports hybrid assembly with short Illumina reads and long high error PacBio/MinION data.</p> 
    
publications :
    -
        display-text : |
           Zimin, A. et al. The MaSuRCA genome Assembler. Bioinformatics (2013). doi:10.1093/bioinformatics/btt476
